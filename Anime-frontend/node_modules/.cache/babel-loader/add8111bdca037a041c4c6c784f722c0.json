{"ast":null,"code":"var _jsxFileName = \"/home/tohzen/coding/Anime/Anime-frontend/src/components/Signup/Signup.js\";\nimport React, { Component } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { isAlpha, isEmail, isAlphanumeric, isStrongPassword } from \"validator\";\nimport { toast } from \"react-toastify\";\nimport Axios from \"../utils/Axios\";\nimport checkIfUserIsAuth from \"../utils/checkIfUserIsAuth\";\nimport \"./Signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      firstNameError: \"\",\n      lastNameError: \"\",\n      usernameError: \"\",\n      emailError: \"\",\n      passwordError: \"\",\n      confirmPasswordError: \"\",\n      isButtonDisabled: true,\n      firstNameOnFocus: false,\n      lastNameOnFocus: false,\n      emailOnFocus: false,\n      usernameOnFocus: false,\n      passwordOnFocus: false,\n      confirmPasswordOnFocus: false\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }, () => {\n        if (event.target.name === \"firstName\" || event.target.name === \"lastName\") {\n          this.handleFirstNameAndLastNameInput(event);\n        }\n\n        if (event.target.name === \"email\") {\n          this.handleEmailInput();\n        }\n\n        if (event.target.name === \"username\") {\n          this.handleUsernameInput();\n        }\n\n        if (event.target.name === \"password\") {\n          this.handlePasswordInput();\n        }\n\n        if (event.target.name === \"confirmPassword\") {\n          this.handleConfirmPasswordInput();\n        }\n      });\n    };\n\n    this.handleConfirmPasswordInput = () => {\n      if (this.state.password !== this.state.confirmPassword) {\n        this.setState({\n          confirmPasswordError: \"Password does not match!\",\n          isButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          confirmPasswordError: \"\"\n        });\n      }\n    };\n\n    this.handlePasswordInput = () => {\n      if (this.state.confirmPasswordOnFocus) {\n        if (this.state.password !== this.state.confirmPassword) {\n          this.setState({\n            confirmPasswordError: \"Password does not match\",\n            isButtonDisabled: true\n          });\n        } else {\n          this.setState({\n            confirmPasswordError: \"\"\n          });\n        }\n      }\n\n      if (this.state.password.length === 0) {\n        this.setState({\n          passwordError: \"Password cannot be empty\",\n          isButtonDisabled: true\n        });\n      } else {\n        if (isStrongPassword(this.state.password)) {\n          this.setState({\n            passwordError: \"\"\n          });\n        } else {\n          this.setState({\n            passwordError: \"Password must contains 1 uppercase, 1 lowercase, 1 special character, 1 number and minimul of 8 charactors long\",\n            isButtonDisabled: true\n          });\n        }\n      }\n    };\n\n    this.handleEmailInput = () => {\n      if (this.state.email.length === 0) {\n        this.setState({\n          emailError: \"Email cannot be empty\",\n          isButtonDisabled: true\n        });\n      } else {\n        if (isEmail(this.state.email)) {\n          this.setState({\n            emailError: \"\"\n          });\n        } else {\n          this.setState({\n            emailError: \"Please, enter a valid email!\",\n            isButtonDisabled: true\n          });\n        }\n      }\n    };\n\n    this.handleFirstNameAndLastNameInput = event => {\n      if (this.state[event.target.name].length > 0) {\n        if (isAlpha(this.state[event.target.name])) {\n          this.setState({\n            [`${event.target.name}Error`]: \"\"\n          });\n        } else {\n          this.setState({\n            [`${event.target.name}Error`]: `${event.target.placeholder} can only have alphabet`,\n            isButtonDisabled: true\n          });\n        }\n      } else {\n        this.setState({\n          [`${event.target.name}Error`]: `${event.target.placeholder} cannot be empty`,\n          isButtonDisabled: true\n        });\n      }\n    };\n\n    this.handleUsernameInput = () => {\n      if (this.state.username.length === 0) {\n        this.setState({\n          usernameError: \"Username cannot be empty\",\n          isButtonDisabled: true\n        });\n      } else {\n        if (isAlphanumeric(this.state.username)) {\n          this.setState({\n            usernameError: \"\"\n          });\n        } else {\n          this.setState({\n            usernameError: \"Username can only have alphabet and number\",\n            isButtonDisabled: true\n          });\n        }\n      }\n    };\n\n    this.handleOnSubmit = async event => {\n      event.preventDefault();\n\n      try {\n        let userInputObj = {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          username: this.state.username,\n          password: this.state.password\n        };\n        let success = await Axios.post(\"/api/user/sign-up\", userInputObj);\n        console.log(success);\n        toast.success(`${success.data.message}`, {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      } catch (e) {\n        toast.error(`${e.response.data.message}`, {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      }\n    };\n\n    this.handleOnBlur = event => {\n      // console.log(event.target.name);\n      // console.log(\"handle onBlur Triggered\");\n      if (this.state[event.target.name].length === 0) {\n        this.setState({\n          [`${event.target.name}Error`]: `${event.target.placeholder} cannot be empty`\n        });\n      }\n    };\n\n    this.handleInputOnFocus = event => {\n      if (!this.state[`${event.target.name}OnFocus`]) {\n        this.setState({\n          [`${event.target.name}OnFocus`]: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    let isAuth = checkIfUserIsAuth();\n\n    if (isAuth) {\n      this.props.history.push(\"/movie\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevState.isButtonDisabled);\n\n    if (prevState.isButtonDisabled === true) {\n      if (this.state.firstNameOnFocus && this.state.lastNameOnFocus && this.state.emailOnFocus && this.state.usernameOnFocus && this.state.passwordOnFocus && this.state.confirmPasswordOnFocus) {\n        if (this.state.firstNameError.length === 0 && this.state.lastNameError.length === 0 && this.state.usernameError.length === 0 && this.state.emailError.length === 0 && this.state.passwordError.length === 0 && this.state.confirmPasswordError.length === 0 && this.state.password === this.state.confirmPassword) {\n          this.setState({\n            isButtonDisabled: false\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n      confirmPassword,\n      firstNameError,\n      lastNameError,\n      usernameError,\n      emailError,\n      passwordError,\n      confirmPasswordError\n    } = this.state;\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-text\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-div\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: this.handleOnSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"firstName\",\n                value: firstName,\n                placeholder: \"First Name\",\n                name: \"firstName\",\n                onChange: this.handleOnChange,\n                autoFocus: true,\n                onBlur: this.handleOnBlur,\n                onFocus: this.handleInputOnFocus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errorMessage\",\n                children: firstNameError && firstNameError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"lastName\",\n                value: lastName,\n                placeholder: \"Last Name\",\n                name: \"lastName\",\n                onChange: this.handleOnChange,\n                onBlur: this.handleOnBlur,\n                onFocus: this.handleInputOnFocus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errorMessage\",\n                children: lastNameError && lastNameError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group-block\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"email\",\n                value: email,\n                placeholder: \"Email\",\n                onChange: this.handleOnChange,\n                name: \"email\",\n                onBlur: this.handleOnBlur,\n                onFocus: this.handleInputOnFocus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errorMessage\",\n                children: emailError && emailError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group-block\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"username\",\n                value: username,\n                placeholder: \"Username\",\n                onChange: this.handleOnChange,\n                name: \"username\",\n                onBlur: this.handleOnBlur,\n                onFocus: this.handleInputOnFocus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errorMessage\",\n                children: usernameError && usernameError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group-block\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"password\",\n                value: password,\n                placeholder: \"Password\",\n                onChange: this.handleOnChange,\n                name: \"password\",\n                onBlur: this.handleOnBlur,\n                onFocus: this.handleInputOnFocus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errorMessage\",\n                children: passwordError && passwordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group-block\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"confirmPassword\",\n                value: confirmPassword,\n                placeholder: \"Confirm Password\",\n                onChange: this.handleOnChange,\n                name: \"confirmPassword\",\n                onBlur: this.handleOnBlur,\n                onFocus: this.handleInputOnFocus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errorMessage\",\n                children: confirmPasswordError && confirmPasswordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: this.state.isButtonDisabled,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Signup;","map":{"version":3,"sources":["/home/tohzen/coding/Anime/Anime-frontend/src/components/Signup/Signup.js"],"names":["React","Component","jwtDecode","isAlpha","isEmail","isAlphanumeric","isStrongPassword","toast","Axios","checkIfUserIsAuth","Signup","state","firstName","lastName","username","email","password","confirmPassword","firstNameError","lastNameError","usernameError","emailError","passwordError","confirmPasswordError","isButtonDisabled","firstNameOnFocus","lastNameOnFocus","emailOnFocus","usernameOnFocus","passwordOnFocus","confirmPasswordOnFocus","handleOnChange","event","setState","target","name","value","handleFirstNameAndLastNameInput","handleEmailInput","handleUsernameInput","handlePasswordInput","handleConfirmPasswordInput","length","placeholder","handleOnSubmit","preventDefault","userInputObj","success","post","console","log","data","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","e","error","response","handleOnBlur","handleInputOnFocus","componentDidMount","isAuth","props","history","push","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { isAlpha, isEmail, isAlphanumeric, isStrongPassword } from \"validator\";\nimport { toast } from \"react-toastify\";\nimport Axios from \"../utils/Axios\";\nimport checkIfUserIsAuth from \"../utils/checkIfUserIsAuth\";\nimport \"./Signup.css\";\n\nexport class Signup extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstNameError: \"\",\n    lastNameError: \"\",\n    usernameError: \"\",\n    emailError: \"\",\n    passwordError: \"\",\n    confirmPasswordError: \"\",\n    isButtonDisabled: true,\n    firstNameOnFocus: false,\n    lastNameOnFocus: false,\n    emailOnFocus: false,\n    usernameOnFocus: false,\n    passwordOnFocus: false,\n    confirmPasswordOnFocus: false,\n  };\n\n  componentDidMount() {\n    let isAuth = checkIfUserIsAuth();\n\n    if (isAuth) {\n      this.props.history.push(\"/movie\");\n    }\n  }\n\n  handleOnChange = (event) => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      },\n      () => {\n        if (\n          event.target.name === \"firstName\" ||\n          event.target.name === \"lastName\"\n        ) {\n          this.handleFirstNameAndLastNameInput(event);\n        }\n\n        if (event.target.name === \"email\") {\n          this.handleEmailInput();\n        }\n\n        if (event.target.name === \"username\") {\n          this.handleUsernameInput();\n        }\n        if (event.target.name === \"password\") {\n          this.handlePasswordInput();\n        }\n\n        if (event.target.name === \"confirmPassword\") {\n          this.handleConfirmPasswordInput();\n        }\n      }\n    );\n  };\n\n  handleConfirmPasswordInput = () => {\n    if (this.state.password !== this.state.confirmPassword) {\n      this.setState({\n        confirmPasswordError: \"Password does not match!\",\n        isButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        confirmPasswordError: \"\",\n      });\n    }\n  };\n\n  handlePasswordInput = () => {\n    if (this.state.confirmPasswordOnFocus) {\n      if (this.state.password !== this.state.confirmPassword) {\n        this.setState({\n          confirmPasswordError: \"Password does not match\",\n          isButtonDisabled: true,\n        });\n      } else {\n        this.setState({\n          confirmPasswordError: \"\",\n        });\n      }\n    }\n\n    if (this.state.password.length === 0) {\n      this.setState({\n        passwordError: \"Password cannot be empty\",\n        isButtonDisabled: true,\n      });\n    } else {\n      if (isStrongPassword(this.state.password)) {\n        this.setState({\n          passwordError: \"\",\n        });\n      } else {\n        this.setState({\n          passwordError:\n            \"Password must contains 1 uppercase, 1 lowercase, 1 special character, 1 number and minimul of 8 charactors long\",\n          isButtonDisabled: true,\n        });\n      }\n    }\n  };\n\n  handleEmailInput = () => {\n    if (this.state.email.length === 0) {\n      this.setState({\n        emailError: \"Email cannot be empty\",\n        isButtonDisabled: true,\n      });\n    } else {\n      if (isEmail(this.state.email)) {\n        this.setState({\n          emailError: \"\",\n        });\n      } else {\n        this.setState({\n          emailError: \"Please, enter a valid email!\",\n          isButtonDisabled: true,\n        });\n      }\n    }\n  };\n\n  handleFirstNameAndLastNameInput = (event) => {\n    if (this.state[event.target.name].length > 0) {\n      if (isAlpha(this.state[event.target.name])) {\n        this.setState({\n          [`${event.target.name}Error`]: \"\",\n        });\n      } else {\n        this.setState({\n          [`${event.target.name}Error`]: `${event.target.placeholder} can only have alphabet`,\n          isButtonDisabled: true,\n        });\n      }\n    } else {\n      this.setState({\n        [`${event.target.name}Error`]: `${event.target.placeholder} cannot be empty`,\n        isButtonDisabled: true,\n      });\n    }\n  };\n\n  handleUsernameInput = () => {\n    if (this.state.username.length === 0) {\n      this.setState({\n        usernameError: \"Username cannot be empty\",\n        isButtonDisabled: true,\n      });\n    } else {\n      if (isAlphanumeric(this.state.username)) {\n        this.setState({\n          usernameError: \"\",\n        });\n      } else {\n        this.setState({\n          usernameError: \"Username can only have alphabet and number\",\n          isButtonDisabled: true,\n        });\n      }\n    }\n  };\n\n  handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let userInputObj = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        username: this.state.username,\n        password: this.state.password,\n      };\n      let success = await Axios.post(\"/api/user/sign-up\", userInputObj);\n      console.log(success);\n      toast.success(`${success.data.message}`,{\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {\n      toast.error(`${e.response.data.message}`,{\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  handleOnBlur = (event) => {\n    // console.log(event.target.name);\n    // console.log(\"handle onBlur Triggered\");\n\n    if (this.state[event.target.name].length === 0) {\n      this.setState({\n        [`${event.target.name}Error`]: `${event.target.placeholder} cannot be empty`,\n      });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevState.isButtonDisabled);\n\n    if (prevState.isButtonDisabled === true) {\n      if (\n        this.state.firstNameOnFocus &&\n        this.state.lastNameOnFocus &&\n        this.state.emailOnFocus &&\n        this.state.usernameOnFocus &&\n        this.state.passwordOnFocus &&\n        this.state.confirmPasswordOnFocus\n      ) {\n        if (\n          this.state.firstNameError.length === 0 &&\n          this.state.lastNameError.length === 0 &&\n          this.state.usernameError.length === 0 &&\n          this.state.emailError.length === 0 &&\n          this.state.passwordError.length === 0 &&\n          this.state.confirmPasswordError.length === 0 &&\n          this.state.password === this.state.confirmPassword\n        ) {\n          this.setState({\n            isButtonDisabled: false,\n          });\n        }\n      }\n    }\n  }\n\n  handleInputOnFocus = (event) => {\n    if (!this.state[`${event.target.name}OnFocus`]) {\n      this.setState({\n        [`${event.target.name}OnFocus`]: true,\n      });\n    }\n  };\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n      confirmPassword,\n      firstNameError,\n      lastNameError,\n      usernameError,\n      emailError,\n      passwordError,\n      confirmPasswordError,\n    } = this.state;\n\n    console.log(this.props);\n\n    return (\n      <div className=\"container\">\n        <div className=\"form-text\">Sign up</div>\n\n        <div className=\"form-div\">\n          <form className=\"form\" onSubmit={this.handleOnSubmit}>\n            <div className=\"form-group-inline\">\n              <div className=\"inline-container\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                  type=\"text\"\n                  id=\"firstName\"\n                  value={firstName}\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  onChange={this.handleOnChange}\n                  autoFocus\n                  onBlur={this.handleOnBlur}\n                  onFocus={this.handleInputOnFocus}\n                />\n                <div className=\"errorMessage\">\n                  {firstNameError && firstNameError}\n                </div>\n              </div>\n\n              <div className=\"inline-container\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                  type=\"text\"\n                  id=\"lastName\"\n                  value={lastName}\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  onChange={this.handleOnChange}\n                  onBlur={this.handleOnBlur}\n                  onFocus={this.handleInputOnFocus}\n                />\n                <div className=\"errorMessage\">\n                  {lastNameError && lastNameError}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group-block\">\n              <div className=\"block-container\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  value={email}\n                  placeholder=\"Email\"\n                  onChange={this.handleOnChange}\n                  name=\"email\"\n                  onBlur={this.handleOnBlur}\n                  onFocus={this.handleInputOnFocus}\n                />\n                <div className=\"errorMessage\">{emailError && emailError}</div>\n              </div>\n            </div>\n\n            <div className=\"form-group-block\">\n              <div className=\"block-container\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  value={username}\n                  placeholder=\"Username\"\n                  onChange={this.handleOnChange}\n                  name=\"username\"\n                  onBlur={this.handleOnBlur}\n                  onFocus={this.handleInputOnFocus}\n                />\n                <div className=\"errorMessage\">\n                  {usernameError && usernameError}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group-block\">\n              <div className=\"block-container\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"text\"\n                  id=\"password\"\n                  value={password}\n                  placeholder=\"Password\"\n                  onChange={this.handleOnChange}\n                  name=\"password\"\n                  onBlur={this.handleOnBlur}\n                  onFocus={this.handleInputOnFocus}\n                />\n                <div className=\"errorMessage\">\n                  {passwordError && passwordError}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group-block\">\n              <div className=\"block-container\">\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                <input\n                  type=\"text\"\n                  id=\"confirmPassword\"\n                  value={confirmPassword}\n                  placeholder=\"Confirm Password\"\n                  onChange={this.handleOnChange}\n                  name=\"confirmPassword\"\n                  onBlur={this.handleOnBlur}\n                  onFocus={this.handleInputOnFocus}\n                />\n                <div className=\"errorMessage\">\n                  {confirmPasswordError && confirmPasswordError}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"button-container\">\n              <button type=\"submit\" disabled={this.state.isButtonDisabled}>\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}