{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tohze\\\\coding\\\\recipe-project-master\\\\food-recp-frontend\\\\src\\\\components\\\\PrivateRoute\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport checkIfUserIsAuth from \"../utils/checkIfUserIsAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  handleUserLogout,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: routerProps => checkIfUserIsAuth() ? /*#__PURE__*/_jsxDEV(Component, { ...routerProps,\n      handleUserLogout: handleUserLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute; // const PrivateRoute = (props) => {\n//   console.log(props);\n//   return <Route exact path={props.path} component={props.component} />;\n// };\n// const PrivateRoute = (props) => {\n//   console.log(props);\n//   return (\n//     <Route\n//       exact\n//       path={props.path}\n//       render={() => <Movie />}\n//       render={() => (props.user ? props.component : <Redirect to=\"/login\" />)}\n//     />\n//   );\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/tohze/coding/recipe-project-master/food-recp-frontend/src/components/PrivateRoute/PrivateRoute.js"],"names":["React","Route","Redirect","checkIfUserIsAuth","PrivateRoute","component","Component","handleUserLogout","rest","routerProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,gBAAxB;AAA0C,KAAGC;AAA7C,CAAD,KAAyD;AAC5E,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,WAAD,IACNN,iBAAiB,kBACf,QAAC,SAAD,OAAeM,WAAf;AAA4B,MAAA,gBAAgB,EAAEF;AAA9C;AAAA;AAAA;AAAA;AAAA,YADe,gBAGf,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;KAAMH,Y;AAeN,eAAeA,YAAf,C,CACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport checkIfUserIsAuth from \"../utils/checkIfUserIsAuth\";\n\nconst PrivateRoute = ({ component: Component, handleUserLogout, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(routerProps) =>\n        checkIfUserIsAuth() ? (\n          <Component {...routerProps} handleUserLogout={handleUserLogout} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n// const PrivateRoute = (props) => {\n//   console.log(props);\n\n//   return <Route exact path={props.path} component={props.component} />;\n// };\n\n// const PrivateRoute = (props) => {\n//   console.log(props);\n\n//   return (\n//     <Route\n//       exact\n//       path={props.path}\n//       render={() => <Movie />}\n//       render={() => (props.user ? props.component : <Redirect to=\"/login\" />)}\n//     />\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}