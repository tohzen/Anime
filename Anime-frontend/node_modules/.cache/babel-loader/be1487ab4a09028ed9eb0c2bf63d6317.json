{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tohze\\\\coding\\\\recipe-project-master\\\\food-recp-frontend\\\\src\\\\components\\\\Recipe\\\\Recipe.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport RecipeList from \"./RecipeList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Recipe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      recipe: \"\",\n      meal: \"\",\n      recipezArray: [],\n      recipeArray2: [],\n      recipeArray3: [],\n      totalCount: 0,\n      totalPage: 0,\n      perPage: 10,\n      currentPage: 1,\n      maxPageLimit: 10,\n      minPageLimit: 0,\n      pageArray: []\n    };\n\n    this.getTotalPages = (totalResults, perPage) => {\n      let pages = [];\n\n      for (let i = 1; i <= Math.ceil(totalResults / perPage); i++) {\n        pages.push(i);\n      }\n\n      return pages;\n    };\n\n    this.handleRandomRecipe = () => {\n      let randomRecipeArray = [\"Berry Banana Breakfast Smoothie\", \"Homemade Garlic and Basil French Fries\", \"Chicken Tortilla Soup (Slow Cooker)\", \"Cauliflower, Brown Rice, and Vegetable Fried Ricer\", \"Slow Cooker Beef Stew\", \"Broccoli and Chickpea Rice Salad\", \"Red Kidney Bean Jambalaya\"];\n      let randomSelectedRecipeIndex = Math.floor(Math.random() * randomRecipeArray.length);\n      return randomRecipeArray[randomSelectedRecipeIndex];\n    };\n\n    this.handleSearchRecipe = async title => {\n      try {\n        //https://api.spoonacular.com/recipes/random?number=1&tags=vegetarian,dessert\n        let result = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?query=${title}&apiKey=${process.env.REACT_APP_COOKING_API}`);\n        console.log(result);\n        return result;\n      } catch (e) {\n        return e;\n      }\n    };\n\n    this.handleRandomRecipes = async () => {\n      try {\n        let results = await axios.get(`https://api.spoonacular.com/recipes/random?number=10&tags=vegetarian,desert&apiKey=${process.env.REACT_APP_COOKING_API}`); // console.log(results)\n\n        return results;\n      } catch (e) {\n        return e;\n      }\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        meal: event.target.value\n      });\n    };\n\n    this.onSubmit = async event => {\n      try {\n        console.log('this meal:', this.state.meal);\n        let result = await this.handleSearchRecipe(this.state.meal);\n        window.sessionStorage.setItem(\"searchedRecipeName\", this.state.meal);\n        let totalPageArray = this.getTotalPages(+result.data.totalResults, this.state.perPage);\n        console.log(result);\n        this.setState({\n          recipeArray: result.data.results,\n          totalPage: +result.data.totalResults,\n          pageArray: totalPageArray\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.showpagination = () => {\n      let totalPages = this.state.totalPage; //440\n\n      let perPage = this.state.perPage; //10\n\n      let currentPage = this.state.currentPage; //1\n\n      let maxPageLimit = this.state.maxPageLimit; // 10\n\n      let minPageLimit = this.state.minPageLimit; // 0\n\n      const buildPagination = () => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: this.state.pageArray.map(number => {\n            if (number < maxPageLimit + 1 && number > minPageLimit) {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => this.handleGoToPage(number),\n                style: {\n                  marginLeft: 15,\n                  marginRight: 15,\n                  color: currentPage === number ? \"red\" : \"black\",\n                  cursor: \"pointer\"\n                },\n                children: number\n              }, number, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this);\n            }\n          })\n        }, void 0, false);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: buildPagination()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.handleGoToPage = number => {\n      this.setState({\n        currentPage: number\n      }, async () => {\n        console.log(this.state.recipe);\n        let result = await this.handleSearchRecipe(this.state.recipe);\n        console.log(result);\n        this.setState({\n          recipeArray: result.data.Search\n        });\n      });\n    };\n\n    this.nextPage = () => {\n      this.setState(prevState => {\n        return { ...prevState,\n          currentPage: prevState.currentPage + 1\n        };\n      }, async () => {\n        let recipe = \"\";\n        let searchedRecipeNameSessionStorage = window.sessionStorage.getItem(\"searchedRecipeName\");\n        recipe = searchedRecipeNameSessionStorage ? window.sessionStorage.getItem(\"searchedRecipeName\") : this.state.recipe;\n        let result = await this.handleSearchRecipe(recipe);\n        this.setState({\n          recipeArray: result.data.Search\n        });\n      });\n\n      if (this.state.currentPage + 1 > this.state.maxPageLimit) {\n        this.setState({\n          maxPageLimit: this.state.maxPageLimit + this.state.perPage,\n          minPageLimit: this.state.minPageLimit + this.state.perPage\n        }, () => {//console.log(this.state);\n        });\n      }\n    };\n\n    this.prevPage = () => {\n      this.setState(prevState => {\n        return { ...prevState,\n          currentPage: prevState.currentPage - 1\n        };\n      }, async () => {\n        let recipe = \"\";\n        let searchedRecipeNameSessionStorage = window.sessionStorage.getItem(\"searchedRecipeName\");\n        recipe = searchedRecipeNameSessionStorage ? window.sessionStorage.getItem(\"searchedRecipeName\") : this.state.recipe;\n        let result = await this.handleSearchRecipe(recipe);\n        this.setState({\n          recipeArray: result.data.Search\n        });\n      });\n      console.log(this.state);\n      console.log((this.state.currentPage - 1) % this.state.perPage);\n\n      if ((this.state.currentPage - 1) % this.state.perPage === 0) {\n        this.setState({\n          maxPageLimit: this.state.maxPageLimit - this.state.perPage,\n          minPageLimit: this.state.minPageLimit - this.state.perPage\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      //check for session storage\n      let searchedRecipeNameSessionStorage = window.sessionStorage.getItem(\"searchedRecipeName\");\n      console.log('sessionstorage:', searchedRecipeNameSessionStorage);\n\n      if (searchedRecipeNameSessionStorage) {\n        let result = await this.handleSearchRecipe(searchedRecipeNameSessionStorage);\n        let totalPageArray = this.getTotalPages(+result.data.totalResults, this.state.perPage);\n        this.setState({\n          recipe: searchedRecipeNameSessionStorage,\n          recipeArray: result.data.results,\n          totalPage: +result.data.totalResults,\n          pageArray: totalPageArray\n        });\n      } else {\n        console.log(55);\n        let results = await this.handleRandomRecipes();\n        console.log(results);\n        this.setState({\n          recipeArray: results.data.recipes\n        }); // let randomRecipeName = this.handleRandomRecipe();\n        // let result = await this.handleSearchRecipe(randomRecipeName);\n        // console.log('result:',result)\n        // let totalPageArray = this.getTotalPages(\n        //   +result.data.totalResults,\n        //   this.state.perPage\n        // );\n        // this.setState({\n        //   recipe: randomRecipeName,\n        //   recipeArray2: result.data.Search,\n        //   totalPage: +result.data.totalResults, \n        //   pageArray: totalPageArray, \n        // });\n      }\n    } catch (e) {}\n  }\n\n  render() {\n    console.log(this.state.recipeArray);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 500,\n          margin: \"0 auto\",\n          textAlign: \"center\",\n          marginTop: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search something...\",\n          name: \"meal\",\n          onChange: this.handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSubmit,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 1200,\n          margin: \"0 auto\",\n          textAlign: \"center\",\n          marginTop: \"50px\",\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n          recipeArray: this.state.recipeArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), this.state.totalPage <= 10 ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 1200,\n          margin: \"0 auto\",\n          textAlign: \"center\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: 50\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: this.state.currentPage === 1 ? true : false,\n          onClick: this.prevPage,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), this.showpagination(), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: this.state.currentPage === this.state.pageArray[this.state.pageArray.length - 1] ? true : false,\n          onClick: this.nextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nexport default Recipe;","map":{"version":3,"sources":["C:/Users/tohze/coding/recipe-project-master/food-recp-frontend/src/components/Recipe/Recipe.js"],"names":["React","Component","axios","Link","RecipeList","Recipe","state","recipe","meal","recipezArray","recipeArray2","recipeArray3","totalCount","totalPage","perPage","currentPage","maxPageLimit","minPageLimit","pageArray","getTotalPages","totalResults","pages","i","Math","ceil","push","handleRandomRecipe","randomRecipeArray","randomSelectedRecipeIndex","floor","random","length","handleSearchRecipe","title","result","get","process","env","REACT_APP_COOKING_API","console","log","e","handleRandomRecipes","results","handleOnChange","event","setState","target","value","onSubmit","window","sessionStorage","setItem","totalPageArray","data","recipeArray","showpagination","totalPages","buildPagination","map","number","handleGoToPage","marginLeft","marginRight","color","cursor","Search","nextPage","prevState","searchedRecipeNameSessionStorage","getItem","prevPage","componentDidMount","recipes","render","width","margin","textAlign","marginTop","display","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport RecipeList from \"./RecipeList\";\n\nexport class Recipe extends Component {\n  state = {\n    recipe: \"\",\n    meal:\"\",\n    recipezArray: [],\n    recipeArray2: [],\n    recipeArray3: [],\n    totalCount: 0,\n    totalPage: 0,\n    perPage: 10,\n    currentPage: 1,\n    maxPageLimit: 10,\n    minPageLimit: 0,\n    pageArray: [],\n  };\n\n  getTotalPages = (totalResults, perPage) => {\n    let pages = [];\n\n    for (let i = 1; i <= Math.ceil(totalResults / perPage); i++) {\n      pages.push(i);\n    }\n\n    return pages;\n  };\n\n  async componentDidMount() {\n    try {\n      //check for session storage\n      let searchedRecipeNameSessionStorage =\n        window.sessionStorage.getItem(\"searchedRecipeName\");\n      console.log('sessionstorage:',searchedRecipeNameSessionStorage)\n      if (searchedRecipeNameSessionStorage) {\n        let result = await this.handleSearchRecipe(\n          searchedRecipeNameSessionStorage\n        );\n\n        let totalPageArray = this.getTotalPages(\n          +result.data.totalResults,\n          this.state.perPage\n        );\n\n        this.setState({\n          recipe: searchedRecipeNameSessionStorage,\n          recipeArray: result.data.results,\n          totalPage: +result.data.totalResults, \n          pageArray: totalPageArray,\n        });\n      } else {\n        console.log(55)\n        let results = await this.handleRandomRecipes();\n        console.log(results)\n        this.setState({\n          recipeArray: results.data.recipes\n        });\n        // let randomRecipeName = this.handleRandomRecipe();\n        // let result = await this.handleSearchRecipe(randomRecipeName);\n        // console.log('result:',result)\n        // let totalPageArray = this.getTotalPages(\n        //   +result.data.totalResults,\n        //   this.state.perPage\n        // );\n\n        // this.setState({\n        //   recipe: randomRecipeName,\n        //   recipeArray2: result.data.Search,\n        //   totalPage: +result.data.totalResults, \n        //   pageArray: totalPageArray, \n        // });\n      }\n    } catch (e) {}\n  }\n\n  handleRandomRecipe = () => {\n    let randomRecipeArray = [\n      \"Berry Banana Breakfast Smoothie\",\n      \"Homemade Garlic and Basil French Fries\",\n      \"Chicken Tortilla Soup (Slow Cooker)\",\n      \"Cauliflower, Brown Rice, and Vegetable Fried Ricer\",\n      \"Slow Cooker Beef Stew\",\n      \"Broccoli and Chickpea Rice Salad\",\n      \"Red Kidney Bean Jambalaya\",\n    ];\n    let randomSelectedRecipeIndex = Math.floor(\n      Math.random() * randomRecipeArray.length\n    );\n    return randomRecipeArray[randomSelectedRecipeIndex];\n  };\n\n  handleSearchRecipe = async (title) => {\n    try {\n      //https://api.spoonacular.com/recipes/random?number=1&tags=vegetarian,dessert\n      let result = await axios.get(\n        `https://api.spoonacular.com/recipes/complexSearch?query=${title}&apiKey=${process.env.REACT_APP_COOKING_API}`\n      );\n        console.log(result)\n      return result;\n    } catch (e) {\n      return e;\n    }\n  };\n\n  handleRandomRecipes = async ()=>{\n    try{\n      let results = await axios.get(`https://api.spoonacular.com/recipes/random?number=10&tags=vegetarian,desert&apiKey=${process.env.REACT_APP_COOKING_API}`);\n      // console.log(results)\n      return results;\n    }catch (e) {\n      return e;\n    }\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      meal: event.target.value,\n    });\n  };\n\n  onSubmit = async (event) => {\n    try {\n      console.log('this meal:',this.state.meal)\n      let result = await this.handleSearchRecipe(this.state.meal);\n\n      window.sessionStorage.setItem(\"searchedRecipeName\", this.state.meal);\n\n      let totalPageArray = this.getTotalPages(\n        +result.data.totalResults,\n        this.state.perPage\n      );\n\n      console.log(result);\n\n      this.setState({\n        recipeArray: result.data.results,\n        totalPage: +result.data.totalResults,\n        pageArray: totalPageArray,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  showpagination = () => {\n    let totalPages = this.state.totalPage; //440\n    let perPage = this.state.perPage; //10\n    let currentPage = this.state.currentPage; //1\n    let maxPageLimit = this.state.maxPageLimit; // 10\n    let minPageLimit = this.state.minPageLimit; // 0\n\n    const buildPagination = () => {\n      return (\n        <>\n          {this.state.pageArray.map((number) => {\n            if (number < maxPageLimit + 1 && number > minPageLimit) {\n              return (\n                <span\n                  onClick={() => this.handleGoToPage(number)}\n                  style={{\n                    marginLeft: 15,\n                    marginRight: 15,\n                    color: currentPage === number ? \"red\" : \"black\",\n                    cursor: \"pointer\",\n                  }}\n                  key={number}\n                >\n                  {number}\n                </span>\n              );\n            }\n          })}\n        </>\n      );\n    };\n\n    return (\n      <div>\n        <ul>{buildPagination()}</ul>\n      </div>\n    );\n  };\n\n  handleGoToPage = (number) => {\n    this.setState(\n      {\n        currentPage: number,\n      },\n      async () => {\n        console.log(this.state.recipe);\n        let result = await this.handleSearchRecipe(this.state.recipe);\n\n        console.log(result);\n\n        this.setState({\n          recipeArray: result.data.Search,\n        });\n      }\n    );\n  };\n\n  nextPage = () => {\n    this.setState(\n      (prevState) => {\n        return {\n          ...prevState,\n          currentPage: prevState.currentPage + 1,\n        };\n      },\n      async () => {\n        let recipe = \"\";\n\n        let searchedRecipeNameSessionStorage =\n          window.sessionStorage.getItem(\"searchedRecipeName\");\n\n        recipe = searchedRecipeNameSessionStorage\n          ? window.sessionStorage.getItem(\"searchedRecipeName\")\n          : this.state.recipe;\n\n        let result = await this.handleSearchRecipe(recipe);\n\n        this.setState({\n          recipeArray: result.data.Search,\n        });\n      }\n    );\n\n    if (this.state.currentPage + 1 > this.state.maxPageLimit) {\n      this.setState(\n        {\n          maxPageLimit: this.state.maxPageLimit + this.state.perPage,\n          minPageLimit: this.state.minPageLimit + this.state.perPage,\n        },\n        () => {\n          //console.log(this.state);\n        }\n      );\n    }\n  };\n\n  prevPage = () => {\n    this.setState(\n      (prevState) => {\n        return {\n          ...prevState,\n          currentPage: prevState.currentPage - 1,\n        };\n      },\n        async () => {\n        let recipe = \"\";\n\n        let searchedRecipeNameSessionStorage =\n            window.sessionStorage.getItem(\"searchedRecipeName\");\n\n        recipe = searchedRecipeNameSessionStorage\n            ? window.sessionStorage.getItem(\"searchedRecipeName\")\n            : this.state.recipe;\n\n        let result = await this.handleSearchRecipe(recipe);\n\n        this.setState({\n            recipeArray: result.data.Search,\n        });\n    }\n    );\n    console.log(this.state);\n    console.log((this.state.currentPage - 1) % this.state.perPage);\n    if ((this.state.currentPage - 1) % this.state.perPage === 0) {\n        this.setState({\n        maxPageLimit: this.state.maxPageLimit - this.state.perPage,\n        minPageLimit: this.state.minPageLimit - this.state.perPage,\n        });\n    }\n    };\n\n    render() {\n      console.log(this.state.recipeArray)\n    return (\n        <div>\n        <div\n            style={{\n            width: 500,\n            margin: \"0 auto\",\n            textAlign: \"center\",\n            marginTop: \"50px\",\n            }}\n        >\n            <input\n            type=\"text\"\n            placeholder=\"Search something...\"\n            name=\"meal\"\n            onChange={this.handleOnChange}\n            />\n            <button onClick={this.onSubmit}>Search</button>\n        </div>\n\n        <div\n            style={{\n            width: 1200,\n            margin: \"0 auto\",\n            textAlign: \"center\",\n            marginTop: \"50px\",\n            display: \"flex\",\n            }}\n        >\n          {/* {this.showMovieList()} */}\n\n            <h3>Recipes</h3>\n            <RecipeList recipeArray={this.state.recipeArray} />\n            \n        </div>\n\n        {this.state.totalPage <= 10 ? (\n            \"\"\n        ) : (\n            <div\n            style={{\n                width: 1200,\n                margin: \"0 auto\",\n                textAlign: \"center\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginTop: 50,\n            }}\n            >\n            <button\n                disabled={this.state.currentPage === 1 ? true : false}\n                onClick={this.prevPage}\n            >\n                Prev\n            </button>\n\n            {this.showpagination()}\n\n            <button\n                disabled={\n                this.state.currentPage ===\n                this.state.pageArray[this.state.pageArray.length - 1]\n                    ? true\n                    : false\n                }\n                onClick={this.nextPage}\n            >\n                Next\n            </button>\n            </div>\n        )}\n\n        \n        </div>\n    );\n    }\n}\n\nexport default Recipe;"]},"metadata":{},"sourceType":"module"}